{% comment %}
    Renders image block for custom content or newsletter sections

    Accepts:
    - block: {Object} Block object
    - animation_anchor: {String} ID of the element that will trigger animations

    Usage:
    {% render 'brick-image', block: block, animation_anchor: animation_anchor %}
{% endcomment %}

{%- liquid
  assign title = block.settings.title
  assign description = block.settings.description
  assign link_text = block.settings.link_text
  assign bg_color = block.settings.bg_color
  assign text_color = block.settings.color
  assign overlay_opacity = block.settings.overlay_opacity | times: 0.01
  assign overlay_color = block.settings.overlay_color
  assign show_overlay_text = block.settings.show_overlay_text
  assign wrapper_width = section.settings.width
  assign hero_transparent = false
  if bg_color == 'rgba(0,0,0,0)' or bg_color == blank
    assign hero_transparent = true
  endif

  assign show_header_backdrop = false
  if hero_transparent and show_overlay_text
    assign show_header_backdrop = true
  endif

  assign color_brightness = text_color | color_brightness
  assign text_color_class = ''

  if color_brightness > 127
    assign text_color_class = 'text-light'
  else
    assign text_color_class = 'text-dark'
  endif

  assign animation_order = 0
-%}

{%- capture style -%}
  {%- unless bg_color == 'rgba(0,0,0,0)' or bg_color == blank -%}
    --bg: {{ bg_color }};
  {%- endunless -%}

  {%- unless text_color == 'rgba(0,0,0,0)' or text_color == blank -%}
    --text: {{ text_color }};
    --text-light: {{ text_color | color_mix: settings.bg_color, 70 }};
    --text-dark: {{ text_color | color_saturate: 10 | color_darken: 15 }};
  {%- endunless -%}
{%- endcapture -%}

<div class="brick__block {{ text_color_class }} dual-image-block"{% if style != blank %} style="{{ style }}"{% endif %} {{ block.shopify_attributes }}>
    <div class="dual-images-container">
      {%- liquid
        render 'dual-image-item', image: block.settings.image__1, special_class: 'dual-image-top'
        render 'dual-image-item', image: block.settings.image__2, special_class: 'dual-image-bottom'
      -%}
    </div>
</div>

{% style %}
  .dual-images-container {
    display: flex;
    gap: 2rem;
    flex-direction: column;
    align-items: flex-end;
    padding: 4rem 0;
  }

  .dual-image-perse {
    max-width: 91%;
    height: 50%;
    display: block;
  }

 /*  @media only screen and (max-width: 750px){
    .dual-image-block, .dual-images-container {
      max-height: 62%;
    }
    .annoying-for-dual {
      height: 100%;
    }
  } */
{% endstyle %}